diff -Naur glibc-linuxthreads-2.5/ChangeLog.csl glibc-linuxthreads-2.5-cs/ChangeLog.csl
--- glibc-linuxthreads-2.5/ChangeLog.csl	1970-01-01 01:00:00.000000000 +0100
+++ glibc-linuxthreads-2.5-cs/ChangeLog.csl	2007-03-27 15:04:10.000000000 +0200
@@ -0,0 +1,7 @@
+2007-02-22  Richard Sandiford  <richard@codesourcery.com>
+
+	linuxthreads/
+	From Mike Frysinger <vapier@gentoo.org>
+
+	* sysdeps/pthread/gai_misc.h: Include pthread.h.
+
diff -Naur glibc-linuxthreads-2.5/linuxthreads/ChangeLog glibc-linuxthreads-2.5-cs/linuxthreads/ChangeLog
--- glibc-linuxthreads-2.5/linuxthreads/ChangeLog	2006-10-02 20:40:47.000000000 +0200
+++ glibc-linuxthreads-2.5-cs/linuxthreads/ChangeLog	2007-03-27 15:04:03.000000000 +0200
@@ -1,3 +1,18 @@
+2H2006-10-03  Richard Sandiford  <richard@codesourcery.com>
+
+	* sysdeps/m68k/pt-machine.h (__compare_and_swap): Don't define for
+	Coldfire.
+	(HAS_COMPARE_AND_SWAP): Likewise.
+	* sysdeps/unix/sysv/linux/m68k/sysdep-cancel.h (PSEUDO): Pass a
+	temporary register to SINGLE_THREAD_P.
+	(__local_multiple_threads): Do not mark hidden in librt.
+	(SINGLE_THREAD_P): Make the assembler version take a temporary
+	register argument.  Load __local_multiple_threads from the GOT
+	when generating PIC for librt.  Use separate PIC implementations
+	for m680x0 and Coldfire.
+	* sysdeps/unix/sysv/linux/m68k/vfork.S (__vfork): On Coldfire targets,
+	load the GOTPC offset into a temporary register first.
+
 2006-10-02  Daniel Jacobowitz  <dan@codesourcery.com>
 
 	* sysdeps/pthread/gai_misc.h (__gai_start_notify_thread): Use
diff -Naur glibc-linuxthreads-2.5/linuxthreads/sysdeps/m68k/pt-machine.h glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/m68k/pt-machine.h
--- glibc-linuxthreads-2.5/linuxthreads/sysdeps/m68k/pt-machine.h	2003-07-31 21:15:42.000000000 +0200
+++ glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/m68k/pt-machine.h	2007-03-27 15:03:35.000000000 +0200
@@ -27,7 +27,9 @@
 #endif
 
 extern long int testandset (int *spinlock);
+#ifndef __mcoldfire__
 extern int __compare_and_swap (long int *p, long int oldval, long int newval);
+#endif
 
 /* Spinlock implementation; required.  */
 PT_EI long int
@@ -50,6 +52,7 @@
 register char * stack_pointer __asm__ ("%sp");
 
 
+#ifndef __mcoldfire__
 /* Compare-and-swap for semaphores. */
 
 #define HAS_COMPARE_AND_SWAP
@@ -65,5 +68,6 @@
 
   return ret;
 }
+#endif
 
 #endif /* pt-machine.h */
diff -Naur glibc-linuxthreads-2.5/linuxthreads/sysdeps/pthread/gai_misc.h glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/pthread/gai_misc.h
--- glibc-linuxthreads-2.5/linuxthreads/sysdeps/pthread/gai_misc.h	2006-10-02 20:40:47.000000000 +0200
+++ glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/pthread/gai_misc.h	2007-03-27 15:03:40.000000000 +0200
@@ -23,6 +23,7 @@
 
 #include <assert.h>
 #include <signal.h>
+#include <pthread.h>
 
 #undef DONT_NEED_GAI_MISC_COND
 
diff -Naur glibc-linuxthreads-2.5/linuxthreads/sysdeps/unix/sysv/linux/m68k/sysdep-cancel.h glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/unix/sysv/linux/m68k/sysdep-cancel.h
--- glibc-linuxthreads-2.5/linuxthreads/sysdeps/unix/sysv/linux/m68k/sysdep-cancel.h	2003-06-21 01:15:54.000000000 +0200
+++ glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/unix/sysv/linux/m68k/sysdep-cancel.h	2007-03-27 15:03:13.000000000 +0200
@@ -28,7 +28,7 @@
 # define PSEUDO(name, syscall_name, args)				      \
   .text;								      \
   ENTRY (name)								      \
-    SINGLE_THREAD_P;							      \
+    SINGLE_THREAD_P (%a0);						      \
     jne .Lpseudo_cancel;						      \
     DO_CALL (syscall_name, args);					      \
     cmp.l &-4095, %d0;							      \
@@ -111,13 +111,34 @@
 # endif
 
 # ifndef __ASSEMBLER__
+#  if !defined NOT_IN_libc || defined IS_IN_libpthread
 extern int __local_multiple_threads attribute_hidden;
+#  else
+extern int __local_multiple_threads;
+#  endif
 #  define SINGLE_THREAD_P __builtin_expect (__local_multiple_threads == 0, 1)
 # else
 #  if !defined PIC
-#   define SINGLE_THREAD_P tst.l __local_multiple_threads
+#   define SINGLE_THREAD_P(ATMP) tst.l __local_multiple_threads
+#  elif !defined NOT_IN_libc || defined IS_IN_libpthread
+#   if defined __mcoldfire__
+#    define SINGLE_THREAD_P(ATMP) \
+       move.l &__local_multiple_threads-., ATMP; \
+       tst.l (-8, %pc, ATMP)
+#   else
+#    define SINGLE_THREAD_P(ATMP) tst.l (__local_multiple_threads, %pc)
+#   endif
 #  else
-#   define SINGLE_THREAD_P tst.l (__local_multiple_threads, %pc)
+#   if defined __mcoldfire__
+#    define SINGLE_THREAD_P(ATMP) \
+       move.l &__local_multiple_threads@GOTPC, ATMP; \
+       move.l (-6, %pc, ATMP), ATMP; \
+       tst.l (ATMP)
+#   else
+#    define SINGLE_THREAD_P(ATMP) \
+#      move.l (__local_multiple_threads@GOTPC, %pc), ATMP; \
+#      tst.l (ATMP)
+#   endif
 #  endif
 # endif
 
diff -Naur glibc-linuxthreads-2.5/linuxthreads/sysdeps/unix/sysv/linux/m68k/vfork.S glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/unix/sysv/linux/m68k/vfork.S
--- glibc-linuxthreads-2.5/linuxthreads/sysdeps/unix/sysv/linux/m68k/vfork.S	2003-02-11 07:27:53.000000000 +0100
+++ glibc-linuxthreads-2.5-cs/linuxthreads/sysdeps/unix/sysv/linux/m68k/vfork.S	2007-03-27 15:03:13.000000000 +0200
@@ -30,7 +30,12 @@
 ENTRY (__vfork)
 
 #ifdef SHARED
+#ifdef __mcoldfire__
+	movel	#__libc_pthread_functions@GOTPC, %d0
+	tstl	(-6, %pc, %d0)
+#else
 	tstl	(__libc_pthread_functions@GOTPC, %pc)
+#endif
 #else
 	.weak	pthread_create
 	movel	#pthread_create, %d0
