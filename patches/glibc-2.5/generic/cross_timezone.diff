Submitted By: Joe Ciccone <jciccone@linuxfromscratch.org>
Date: 2006-11-26
Initial Package Version: 2.5
Origin: Joe Ciccone
Upstream Status: Unknown
Description: Adds native compile support to the build system then uses that
             support to build zic-native, for installing timezone info,
             rpcgen-native, for building librpcsvc.a, and localedef-native,
             for creating the locale-archive.

             -2 takes into account the possibility of CFLAGS being set for
             the target.

---
 Makeconfig                     |   14 ++++++++++++++
 Makerules                      |    9 ++++++++-
 Rules                          |    9 ++++++++-
 iconv/Makefile                 |    4 ++++
 iconvdata/Makefile             |   18 ++++++++++--------
 include-native/bits/libc-tsd.h |    3 +++
 include-native/config.h        |    1 +
 include-native/gnu/stubs.h     |    1 +
 include-native/intl/loadinfo.h |    4 ++++
 include-native/libintl.h       |   13 +++++++++++++
 include-native/symbol-hacks.h  |    1 +
 include-native/tls.h           |   11 +++++++++++
 locale/Makefile                |    9 +++++++++
 localedata/Makefile            |    5 +++++
 malloc/Makefile                |    5 -----
 sunrpc/Makefile                |   23 ++++++++++++++++++-----
 timezone/Makefile              |   14 ++++++++++----
 17 files changed, 120 insertions(+), 24 deletions(-)

Index: iconv/Makefile
===================================================================
--- iconv/Makefile.orig	2008-03-08 10:27:55.000000000 +0100
+++ iconv/Makefile	2008-03-08 10:28:36.000000000 +0100
@@ -56,6 +56,9 @@
 		  iconvconfig.h
 
 others		= iconv_prog iconvconfig
+ifneq ($(cross-compiling),no)
+others-native	= iconvconfig-native
+endif
 install-others	= $(inst_bindir)/iconv
 install-sbin	= iconvconfig
 
@@ -78,6 +81,7 @@
 
 $(objpfx)iconv_prog: $(iconv_prog-modules:%=$(objpfx)%.o)
 $(objpfx)iconvconfig: $(iconvconfig-modules:%=$(objpfx)%.o)
+$(objpfx)iconvconfig-native: $(iconvconfig-modules:%=$(objpfx)%-native.o)
 
 # eglibc: ifneq ($(cross-compiling),yes)
 xtests: test-iconvconfig
Index: include-native/bits/libc-tsd.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ include-native/bits/libc-tsd.h	2008-03-08 10:28:36.000000000 +0100
@@ -0,0 +1,3 @@
+#ifndef __libc_tsd_define
+#define __libc_tsd_define(A,B)
+#endif
Index: include-native/config.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ include-native/config.h	2008-03-08 10:28:36.000000000 +0100
@@ -0,0 +1 @@
+/* Empty */
Index: include-native/gnu/stubs.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ include-native/gnu/stubs.h	2008-03-08 10:28:36.000000000 +0100
@@ -0,0 +1 @@
+/* Empty */
Index: include-native/intl/loadinfo.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ include-native/intl/loadinfo.h	2008-03-08 10:28:36.000000000 +0100
@@ -0,0 +1,4 @@
+#ifndef LOADINFO_H
+#define LOADINFO_H
+struct loaded_l10nfile;
+#endif
Index: include-native/libintl.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ include-native/libintl.h	2008-03-08 10:28:36.000000000 +0100
@@ -0,0 +1,13 @@
+#include_next <libintl.h>
+
+#ifndef _
+#define _(X) (X)
+#endif
+
+#ifndef N_
+#define N_(X) (X)
+#endif
+
+#ifndef _libc_intl_domainname
+#define _libc_intl_domainname "libc"
+#endif
Index: include-native/symbol-hacks.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ include-native/symbol-hacks.h	2008-03-08 10:28:36.000000000 +0100
@@ -0,0 +1 @@
+/* Empty */
Index: include-native/tls.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ include-native/tls.h	2008-03-08 10:28:36.000000000 +0100
@@ -0,0 +1,11 @@
+#ifndef _include_tls_h
+#define _include_tls_h 1
+
+#if USE_TLS && HAVE___THREAD \
+    && (!defined NOT_IN_libc || defined IS_IN_libpthread)
+# define USE___THREAD 1
+#else
+# define USE___THREAD 0
+#endif
+
+#endif
Index: locale/Makefile
===================================================================
--- locale/Makefile.orig	2008-03-08 10:27:41.000000000 +0100
+++ locale/Makefile	2008-03-08 10:28:36.000000000 +0100
@@ -44,6 +44,9 @@
 aux		= $(categories:%=lc-%) $(categories:%=C-%) SYS_libc C_name \
 		  xlocale localename global-locale coll-lookup
 others		= localedef locale
+ifneq ($(cross-compiling),no)
+others-native	= localedef-native
+endif
 #others-static	= localedef locale
 install-bin	= localedef locale
 extra-objs	= $(localedef-modules:=.o) $(localedef-aux:=.o) \
@@ -81,6 +84,12 @@
 $(objpfx)locale: $(locale-modules:%=$(objpfx)%.o)
 $(objpfx)localedef $(objpfx)locale: $(lib-modules:%=$(objpfx)%.o)
 
+ifneq ($(cross-compiling),no)
+$(objpfx)localedef-native: $(localedef-modules:%=$(objpfx)%-native.o)
+$(objpfx)localedef-native: $(localedef-aux:%=$(objpfx)%-native.o)
+$(objpfx)localedef-native: $(lib-modules:%=$(objpfx)%-native.o)
+endif
+
 C-translit.h: C-translit.h.in gen-translit.pl
 	$(PERL) gen-translit.pl < $< > $@.tmp
 	mv -f $@.tmp $@
Index: localedata/Makefile
===================================================================
--- localedata/Makefile.orig	2008-03-08 10:27:55.000000000 +0100
+++ localedata/Makefile	2008-03-08 10:28:36.000000000 +0100
@@ -226,8 +226,13 @@
 INSTALL-SUPPORTED-LOCALES=$(addprefix install-, $(SUPPORTED-LOCALES))
 
 # Sometimes the whole collection of locale files should be installed.
+ifeq ($(cross-compiling),no)
 LOCALEDEF=I18NPATH=. GCONV_PATH=$(common-objpfx)iconvdata LC_ALL=C \
 $(common-objpfx)elf/ld.so --library-path $(rpath-link) $(common-objpfx)locale/localedef
+else
+LOCALEDEF=I18NPATH=. GCONV_PATH=$(common-objpfx)iconvdata LC_ALL=C \
+$(common-objpfx)locale/localedef-native
+endif
 install-locales: $(INSTALL-SUPPORTED-LOCALES)
 
 install-locales-dir:
Index: Makeconfig
===================================================================
--- Makeconfig.orig	2008-03-08 10:27:55.000000000 +0100
+++ Makeconfig	2008-03-08 10:28:36.000000000 +0100
@@ -447,6 +447,13 @@
 			   $(common-objpfx)libc% $(+postinit),$^) \
 	      $(link-extra-libs-static) $(link-libc-static) $(+postctor) $(+postinit)
 endif
+# Command for linking programs against the host system.
+ifndef +link-native
++link-native = $(BUILD_CC) -static -g -o $@ $^ \
+              $(LDFLAGS) $(LDFLAGS-$(@F)) \
+              $(combreloc-LDFLAGS) $(relro-LDFLAGS) $(hashstyle-LDFLAGS) \
+              $(link-extra-libs)
+endif
 # Command for statically linking bounded-pointer programs with the C library.
 ifndef +link-bounded
 +link-bounded = $(CC) -nostdlib -nostartfiles -static -fbounded-pointers -o $@ \
@@ -668,6 +675,8 @@
 	    $(+sysdep-includes) $(includes) \
 	    $(patsubst %/,-I%,$(..)) $(libio-include) -I. $(sysincludes)
 
++includes-native = -I$(..)include-native -I$(objpfx) -I.
+
 # Since libio has several internal header files, we use a -I instead
 # of many little headers in the include directory.
 libio-include = -I$(..)libio
@@ -682,10 +691,15 @@
 	   $(foreach lib,$(libof-$(basename $(@F))) \
 		         $(libof-$(<F)) $(libof-$(@F)),$(CPPFLAGS-$(lib))) \
 	   $(CPPFLAGS-$(<F)) $(CPPFLAGS-$(@F)) $(CPPFLAGS-$(basename $(@F)))
+CPPFLAGS-native = -D_GNU_SOURCE $($(subdir)-CPPFLAGS) $(+includes-native) $(defines) \
+           $(CPPFLAGS-$(suffix $@)) -include $(..)include/libc-symbols.h \
+           $(CPPFLAGS-$(<F)) $(CPPFLAGS-$(@F)) $(CPPFLAGS-$(basename $(@F)))
 override CFLAGS	= -std=gnu99 \
 		  $(filter-out %frame-pointer,$(+cflags)) $(+gccwarn-c) \
 		  $(sysdep-CFLAGS) $(CFLAGS-$(suffix $@)) $(CFLAGS-$(<F)) \
 		  $(CFLAGS-$(@F))
+override CFLAGS-native = -std=gnu99 $(default_cflags) $(+gccwarn-c) \
+                  $(CFLAGS-$(suffix $@)) $(CFLAGS-$(<F)) $(CFLAGS-$(@F))
 override CXXFLAGS = $(c++-sysincludes) \
 		    $(filter-out %frame-pointer,$(+cflags)) $(sysdep-CFLAGS) \
 		    $(CFLAGS-$(suffix $@)) $(CFLAGS-$(<F)) $(CFLAGS-$(@F))
Index: Makerules
===================================================================
--- Makerules.orig	2008-03-08 10:27:59.000000000 +0100
+++ Makerules	2008-03-08 10:28:36.000000000 +0100
@@ -292,6 +292,9 @@
 object-suffixes-left := $(all-object-suffixes)
 include $(o-iterator)
 
+$(objpfx)%-native.o: %.c $(before-compile)
+	$(native-compile-command.c)
+
 # Omit the objpfx rules when building in the source tree, because
 # objpfx is empty and so these rules just override the ones above.
 ifdef objpfx
@@ -368,6 +371,8 @@
 compile-command.s = $(COMPILE.s) $< $(OUTPUT_OPTION) $(compile-mkdep-flags)
 compile-command.c = $(compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
 compile-command.cc = $(compile.cc) $(OUTPUT_OPTION) $(compile-mkdep-flags)
+# Native commands
+native-compile-command.c = $(native-compile.c) $(OUTPUT_OPTION) $(compile-mkdep-flags)
 
 # GCC can grok options after the file name, and it looks nicer that way.
 compile.c = $(CC) $< -c $(CFLAGS) $(CPPFLAGS)
@@ -377,6 +382,8 @@
 COMPILE.S = $(CC) -c $(CPPFLAGS) $(S-CPPFLAGS) \
 		  $(ASFLAGS) $(ASFLAGS-$(suffix $@))
 COMPILE.s = $(filter-out -pipe,$(CC)) -c $(ASFLAGS)
+# Native commands
+native-compile.c = $(BUILD_CC) -g $< -c $(CFLAGS-native) $(CPPFLAGS-native)
 
 # We need this for the output to go in the right place.  It will default to
 # empty if make was configured to work with a cc that can't grok -c and -o
@@ -1187,7 +1194,7 @@
 $(make-target-directory)
 $(patsubst %/,cd % &&,$(objpfx)) \
 $(BUILD_CC) $($(basename $(<F))-CFLAGS) $(ALL_BUILD_CFLAGS) \
-	    $(firstword $(filter /%,$< $(shell pwd)/$<)) -o $(@F)
+	    $(addprefix $(shell pwd)/, $^) -o $(@F)
 endef
 
 # Command to compile $< in $(common-objdir) using the native libraries.
Index: malloc/Makefile
===================================================================
--- malloc/Makefile.orig	2008-03-08 10:27:55.000000000 +0100
+++ malloc/Makefile	2008-03-08 10:28:36.000000000 +0100
@@ -73,10 +73,6 @@
 endif
 endif
 
-# Unless we get a test for the availability of libgd which also works
-# for cross-compiling we disable the memusagestat generation in this
-# situation.
-ifneq ($(cross-compiling),yes)
 # If the gd library is available we build the `memusagestat' program.
 ifneq ($(LIBGD),no)
 others: $(objpfx)memusage
@@ -91,7 +87,6 @@
 # is to presume that the standard system headers will be ok for this file.
 $(objpfx)memusagestat.o: sysincludes = # nothing
 endif
-endif
 
 # Another goal which can be used to override the configure decision.
 .PHONY: do-memusagestat
Index: Rules
===================================================================
--- Rules.orig	2008-03-08 10:27:56.000000000 +0100
+++ Rules	2008-03-08 10:28:36.000000000 +0100
@@ -87,7 +87,7 @@
 
 .PHONY: others tests
 ifeq ($(build-programs),yes)
-others: $(addprefix $(objpfx),$(others) $(sysdep-others) $(extra-objs))
+others: $(addprefix $(objpfx),$(others) $(others-native) $(sysdep-others) $(extra-objs))
 else
 others: $(addprefix $(objpfx),$(extra-objs))
 endif
@@ -106,9 +106,11 @@
 ifeq ($(build-programs),yes)
 binaries-all = $(others) $(sysdep-others) $(tests) $(xtests) $(test-srcs)
 binaries-static = $(others-static) $(tests-static) $(xtests-static)
+binaries-native = $(others-native)
 else
 binaries-all = $(tests) $(xtests) $(test-srcs)
 binaries-static =
+binaries-native =
 endif
 
 binaries-shared = $(filter-out $(binaries-static), $(binaries-all))
@@ -127,6 +129,11 @@
 	$(+link-static)
 endif
 
+ifneq "$(strip $(binaries-native))" ""
+$(addprefix $(objpfx),$(binaries-native)): %: %.o
+	$(+link-native)
+endif
+
 ifeq ($(build-bounded),yes)
 binaries-bounded = $(addsuffix -bp,$(tests) $(xtests) $(test-srcs))
 $(addprefix $(objpfx),$(binaries-bounded)): %-bp: %.ob \
Index: sunrpc/Makefile
===================================================================
--- sunrpc/Makefile.orig	2008-03-08 10:27:56.000000000 +0100
+++ sunrpc/Makefile	2008-03-08 10:28:36.000000000 +0100
@@ -70,6 +70,9 @@
 	    clnt_unix svc_unix create_xid xdr_intXX_t
 
 others := rpcinfo
+ifneq ($(cross-compiling),no)
+others-native := rpcgen-native
+endif
 install-bin := rpcgen
 install-sbin := rpcinfo
 rpcgen-objs = rpc_main.o rpc_hout.o rpc_cout.o rpc_parse.o \
@@ -98,17 +101,17 @@
 	     $(resolvobjdir)/libresolv.a
 endif
 
-ifeq (no,$(cross-compiling))
-ifneq (yes,$(install-bootstrap-headers))
-# We can only build this library if we can run the rpcgen we build.
+#ifeq (no,$(cross-compiling))
+#ifneq (yes,$(install-bootstrap-headers))
+## We can only build this library if we can run the rpcgen we build.
 headers += $(rpcsvc:%.x=rpcsvc/%.h)
 extra-libs := librpcsvc
 extra-libs-others := librpcsvc # Make it in `others' pass, not `lib' pass.
 librpcsvc-routines = $(rpcsvc:%.x=x%)
 librpcsvc-inhibit-o = .os # Build no shared rpcsvc library.
 omit-deps = $(librpcsvc-routines)
-endif
-endif
+#endif
+#endif
 
 CFLAGS-xbootparam_prot.c = -Wno-unused $(PIC-ccflag)
 CFLAGS-xnlm_prot.c = -Wno-unused $(PIC-ccflag)
@@ -138,13 +141,26 @@
   $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
 	$(+link)
 
+ifneq ($(cross-compiling),no)
+rpcgen.c:
+	touch rpcgen.c
+
+$(objpfx)rpcgen-native: $(addprefix $(objpfx),$(rpcgen-objs:%.o=%-native.o))
+endif
+
 # This makes sure -DNOT_IN_libc is passed for all these modules.
 cpp-srcs-left := $(rpcgen-objs:.o=.c)
 lib := nonlib
 include $(patsubst %,$(..)cppflags-iterator.mk,$(cpp-srcs-left))
 
 # Tell rpcgen where to find the C preprocessor.
+ifeq ($(cross-compiling),no)
 rpcgen-cmd = CPP='$(CC) -E -x c-header' $(built-program-cmd) -Y ../scripts
+rpcgen = $(objpfx)rpcgen
+else
+rpcgen-cmd = CPP='$(CC) -E -x c-header' $(objpfx)rpcgen-native -Y ../scripts
+rpcgen = $(objpfx)rpcgen-native
+endif
 
 # Install the rpc data base file.
 $(inst_sysconfdir)/rpc: etc.rpc $(+force)
@@ -155,7 +171,7 @@
 # relinked.
 $(rpcsvc:%.x=$(objpfx)rpcsvc/%.h): $(objpfx)rpcsvc/%.h: $(objpfx)rpcsvc/%.stmp
 	@:
-$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(objpfx)rpcgen
+$(objpfx)rpcsvc/%.stmp: rpcsvc/%.x $(rpcgen)
 	$(make-target-directory)
 	-@rm -f ${@:stmp=T} $@
 	$(rpcgen-cmd) -h $< -o ${@:stmp=T}
@@ -165,7 +181,7 @@
 # Generate the rpcsvc XDR functions with rpcgen.
 $(rpcsvc:%.x=$(objpfx)x%.c): $(objpfx)x%.c: $(objpfx)x%.stmp
 	@:
-$(objpfx)x%.stmp: rpcsvc/%.x $(objpfx)rpcgen
+$(objpfx)x%.stmp: rpcsvc/%.x $(rpcgen)
 	-@rm -f ${@:stmp=T} $@
 	$(rpcgen-cmd) -c $< -o ${@:stmp=T}
 	$(move-if-change) $(@:stmp=T) $(@:stmp=c)
Index: timezone/Makefile
===================================================================
--- timezone/Makefile.orig	2008-03-08 10:27:41.000000000 +0100
+++ timezone/Makefile	2008-03-08 10:28:36.000000000 +0100
@@ -28,6 +28,9 @@
 extra-objs := scheck.o ialloc.o
 
 others	:= zdump zic
+ifneq ($(cross-compiling),no)
+others-native := zic-native
+endif
 tests	:= test-tz tst-timezone
 
 tzbases := africa antarctica asia australasia europe northamerica \
@@ -69,13 +72,10 @@
 					 $(addprefix $(inst_zonedir)/, \
 						     $(posixrules-file)))
 
-ifeq ($(cross-compiling),no)
-# Don't try to install the zoneinfo files since we can't run zic.
 install-others = $(addprefix $(inst_zonedir)/,$(zonenames) \
 					      $(zonenames:%=posix/%) \
 					      $(zonenames:%=right/%)) \
 		 $(installed-localtime-file) $(installed-posixrules-file)
-endif
 
 ifeq ($(have-ksh),yes)
 install-others += $(inst_zonedir)/iso3166.tab $(inst_zonedir)/zone.tab
@@ -128,7 +128,11 @@
 # We have to use `-d $(inst_zonedir)' to explictly tell zic where to
 # place the output files although $(zonedir) is compiled in.  But the
 # user might have set $(install_root) on the command line of `make install'.
+ifeq ($(cross-compiling),no)
 zic-cmd = $(built-program-cmd) -d $(inst_zonedir)
+else
+zic-cmd = $(common-objpfx)/timezone/zic-native -d $(inst_zonedir)
+endif
 tzcompile = $(zic-cmd)$(target-zone-flavor) -L $(word 3,$^) \
 	    -y $(dir $(word 4,$^))$(notdir $(word 4,$^)) $<
 
@@ -158,8 +162,10 @@
 	$(zic-cmd) -p $(posixrules)
 endif
 
-
 $(objpfx)zic: $(objpfx)scheck.o $(objpfx)ialloc.o
+ifneq ($(cross-compiling),no)
+$(objpfx)zic-native:  $(objpfx)scheck-native.o $(objpfx)ialloc-native.o
+endif
 
 tz-cflags = -DTZDIR='"$(zonedir)"' \
 	    -DTZDEFAULT='"$(localtime-file)"' \
